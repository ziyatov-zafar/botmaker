<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="org.example.newbot.NewbotApplicationTests" time="10.561" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\Farobiy students\Desktop\zafar projectsa\main projects\botmaker\target\test-classes;C:\Users\Farobiy students\Desktop\zafar projectsa\main projects\botmaker\target\classes;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.4\spring-boot-starter-data-jpa-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.4\spring-boot-starter-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot\3.4.4\spring-boot-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.4\spring-boot-autoconfigure-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.4\spring-boot-starter-logging-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\Farobiy students\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\Farobiy students\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\Farobiy students\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\Farobiy students\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\Farobiy students\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Farobiy students\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.4\spring-boot-starter-jdbc-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-jdbc\6.2.5\spring-jdbc-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\hibernate\orm\hibernate-core\6.6.11.Final\hibernate-core-6.6.11.Final.jar;C:\Users\Farobiy students\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Farobiy students\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Farobiy students\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\Farobiy students\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Farobiy students\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\Farobiy students\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\Farobiy students\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Farobiy students\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\data\spring-data-jpa\3.4.4\spring-data-jpa-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\data\spring-data-commons\3.4.4\spring-data-commons-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-orm\6.2.5\spring-orm-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-context\6.2.5\spring-context-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-aop\6.2.5\spring-aop-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-tx\6.2.5\spring-tx-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-beans\6.2.5\spring-beans-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-aspects\6.2.5\spring-aspects-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.4\spring-boot-starter-web-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.4\spring-boot-starter-json-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.4\spring-boot-starter-tomcat-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\Farobiy students\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\Farobiy students\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-web\6.2.5\spring-web-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\io\micrometer\micrometer-observation\1.14.5\micrometer-observation-1.14.5.jar;C:\Users\Farobiy students\.m2\repository\io\micrometer\micrometer-commons\1.14.5\micrometer-commons-1.14.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-webmvc\6.2.5\spring-webmvc-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-expression\6.2.5\spring-expression-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\com\google\code\gson\gson\2.8.9\gson-2.8.9.jar;C:\Users\Farobiy students\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Farobiy students\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Farobiy students\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Farobiy students\.m2\repository\org\jvnet\staxex\stax-ex\2.1.0\stax-ex-2.1.0.jar;C:\Users\Farobiy students\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Farobiy students\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\2.1.1\FastInfoset-2.1.1.jar;C:\Users\Farobiy students\.m2\repository\org\telegram\telegrambots\6.9.7.1\telegrambots-6.9.7.1.jar;C:\Users\Farobiy students\.m2\repository\org\telegram\telegrambots-meta\6.9.7.1\telegrambots-meta-6.9.7.1.jar;C:\Users\Farobiy students\.m2\repository\org\apache\commons\commons-lang3\3.17.0\commons-lang3-3.17.0.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\jaxrs\jackson-jaxrs-json-provider\2.18.3\jackson-jaxrs-json-provider-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\jaxrs\jackson-jaxrs-base\2.18.3\jackson-jaxrs-base-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\module\jackson-module-jaxb-annotations\2.18.3\jackson-module-jaxb-annotations-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\3.1.10\jersey-hk2-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\core\jersey-common\3.1.10\jersey-common-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\hk2\hk2-locator\3.0.6\hk2-locator-3.0.6.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\3.0.6\aopalliance-repackaged-3.0.6.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\hk2\hk2-api\3.0.6\hk2-api-3.0.6.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\hk2\hk2-utils\3.0.6\hk2-utils-3.0.6.jar;C:\Users\Farobiy students\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\3.1.10\jersey-media-json-jackson-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\ext\jersey-entity-filtering\3.1.10\jersey-entity-filtering-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.18.3\jackson-module-jakarta-xmlbind-annotations-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\containers\jersey-container-grizzly2-http\3.1.10\jersey-container-grizzly2-http-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\grizzly\grizzly-http-server\4.0.2\grizzly-http-server-4.0.2.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\grizzly\grizzly-http\4.0.2\grizzly-http-4.0.2.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\grizzly\grizzly-framework\4.0.2\grizzly-framework-4.0.2.jar;C:\Users\Farobiy students\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\core\jersey-server\3.1.10\jersey-server-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\core\jersey-client\3.1.10\jersey-client-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Farobiy students\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Farobiy students\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Farobiy students\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Farobiy students\.m2\repository\commons-codec\commons-codec\1.17.2\commons-codec-1.17.2.jar;C:\Users\Farobiy students\.m2\repository\org\apache\httpcomponents\httpmime\4.5.14\httpmime-4.5.14.jar;C:\Users\Farobiy students\.m2\repository\commons-io\commons-io\2.15.1\commons-io-2.15.1.jar;C:\Users\Farobiy students\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\Farobiy students\.m2\repository\org\postgresql\postgresql\42.7.5\postgresql-42.7.5.jar;C:\Users\Farobiy students\.m2\repository\org\checkerframework\checker-qual\3.48.3\checker-qual-3.48.3.jar;C:\Users\Farobiy students\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.4\spring-boot-starter-test-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-test\3.4.4\spring-boot-test-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.4\spring-boot-test-autoconfigure-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\Farobiy students\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Farobiy students\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\Farobiy students\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\Farobiy students\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\Farobiy students\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\Farobiy students\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\Farobiy students\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Farobiy students\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Farobiy students\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Farobiy students\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\Farobiy students\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\Farobiy students\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Farobiy students\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\Farobiy students\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\Farobiy students\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-core\6.2.5\spring-core-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-jcl\6.2.5\spring-jcl-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-test\6.2.5\spring-test-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="Asia/Tashkent"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="APPLICATION_NAME" value="example-bot"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Users\Farobiy students\.jdks\corretto-17.0.14\bin"/>
    <property name="sun.java.command" value="C:\Users\Farobiy students\AppData\Local\Temp\surefire3797674062156227365\surefirebooter-20250413142750307_3.jar C:\Users\Farobiy students\AppData\Local\Temp\surefire3797674062156227365 2025-04-13T14-27-50_068-jvmRun1 surefire-20250413142750307_1tmp surefire_0-20250413142750307_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\Farobiy students\Desktop\zafar projectsa\main projects\botmaker\target\test-classes;C:\Users\Farobiy students\Desktop\zafar projectsa\main projects\botmaker\target\classes;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.4\spring-boot-starter-data-jpa-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.4\spring-boot-starter-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot\3.4.4\spring-boot-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.4\spring-boot-autoconfigure-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.4\spring-boot-starter-logging-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\Farobiy students\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\Farobiy students\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\Farobiy students\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\Farobiy students\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\Farobiy students\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Farobiy students\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.4\spring-boot-starter-jdbc-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-jdbc\6.2.5\spring-jdbc-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\hibernate\orm\hibernate-core\6.6.11.Final\hibernate-core-6.6.11.Final.jar;C:\Users\Farobiy students\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Farobiy students\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Farobiy students\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\Farobiy students\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Farobiy students\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\Farobiy students\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\Farobiy students\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Farobiy students\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\data\spring-data-jpa\3.4.4\spring-data-jpa-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\data\spring-data-commons\3.4.4\spring-data-commons-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-orm\6.2.5\spring-orm-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-context\6.2.5\spring-context-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-aop\6.2.5\spring-aop-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-tx\6.2.5\spring-tx-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-beans\6.2.5\spring-beans-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-aspects\6.2.5\spring-aspects-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.4\spring-boot-starter-web-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.4\spring-boot-starter-json-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.4\spring-boot-starter-tomcat-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\Farobiy students\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\Farobiy students\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-web\6.2.5\spring-web-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\io\micrometer\micrometer-observation\1.14.5\micrometer-observation-1.14.5.jar;C:\Users\Farobiy students\.m2\repository\io\micrometer\micrometer-commons\1.14.5\micrometer-commons-1.14.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-webmvc\6.2.5\spring-webmvc-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-expression\6.2.5\spring-expression-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\com\google\code\gson\gson\2.8.9\gson-2.8.9.jar;C:\Users\Farobiy students\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Farobiy students\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Farobiy students\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Farobiy students\.m2\repository\org\jvnet\staxex\stax-ex\2.1.0\stax-ex-2.1.0.jar;C:\Users\Farobiy students\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Farobiy students\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\2.1.1\FastInfoset-2.1.1.jar;C:\Users\Farobiy students\.m2\repository\org\telegram\telegrambots\6.9.7.1\telegrambots-6.9.7.1.jar;C:\Users\Farobiy students\.m2\repository\org\telegram\telegrambots-meta\6.9.7.1\telegrambots-meta-6.9.7.1.jar;C:\Users\Farobiy students\.m2\repository\org\apache\commons\commons-lang3\3.17.0\commons-lang3-3.17.0.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\jaxrs\jackson-jaxrs-json-provider\2.18.3\jackson-jaxrs-json-provider-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\jaxrs\jackson-jaxrs-base\2.18.3\jackson-jaxrs-base-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\module\jackson-module-jaxb-annotations\2.18.3\jackson-module-jaxb-annotations-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\3.1.10\jersey-hk2-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\core\jersey-common\3.1.10\jersey-common-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\hk2\hk2-locator\3.0.6\hk2-locator-3.0.6.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\3.0.6\aopalliance-repackaged-3.0.6.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\hk2\hk2-api\3.0.6\hk2-api-3.0.6.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\hk2\hk2-utils\3.0.6\hk2-utils-3.0.6.jar;C:\Users\Farobiy students\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\3.1.10\jersey-media-json-jackson-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\ext\jersey-entity-filtering\3.1.10\jersey-entity-filtering-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.18.3\jackson-module-jakarta-xmlbind-annotations-2.18.3.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\containers\jersey-container-grizzly2-http\3.1.10\jersey-container-grizzly2-http-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\grizzly\grizzly-http-server\4.0.2\grizzly-http-server-4.0.2.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\grizzly\grizzly-http\4.0.2\grizzly-http-4.0.2.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\grizzly\grizzly-framework\4.0.2\grizzly-framework-4.0.2.jar;C:\Users\Farobiy students\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\core\jersey-server\3.1.10\jersey-server-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\org\glassfish\jersey\core\jersey-client\3.1.10\jersey-client-3.1.10.jar;C:\Users\Farobiy students\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Farobiy students\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Farobiy students\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Farobiy students\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Farobiy students\.m2\repository\commons-codec\commons-codec\1.17.2\commons-codec-1.17.2.jar;C:\Users\Farobiy students\.m2\repository\org\apache\httpcomponents\httpmime\4.5.14\httpmime-4.5.14.jar;C:\Users\Farobiy students\.m2\repository\commons-io\commons-io\2.15.1\commons-io-2.15.1.jar;C:\Users\Farobiy students\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\Farobiy students\.m2\repository\org\postgresql\postgresql\42.7.5\postgresql-42.7.5.jar;C:\Users\Farobiy students\.m2\repository\org\checkerframework\checker-qual\3.48.3\checker-qual-3.48.3.jar;C:\Users\Farobiy students\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.4\spring-boot-starter-test-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-test\3.4.4\spring-boot-test-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.4\spring-boot-test-autoconfigure-3.4.4.jar;C:\Users\Farobiy students\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\Farobiy students\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Farobiy students\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\Farobiy students\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\Farobiy students\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\Farobiy students\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\Farobiy students\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\Farobiy students\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Farobiy students\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Farobiy students\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Farobiy students\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\Farobiy students\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\Farobiy students\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\Farobiy students\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Farobiy students\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\Farobiy students\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\Farobiy students\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-core\6.2.5\spring-core-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-jcl\6.2.5\spring-jcl-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\springframework\spring-test\6.2.5\spring-test-6.2.5.jar;C:\Users\Farobiy students\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Farobiy students"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="C:\Users\Farobiy students\.jdks\corretto-17.0.14"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\Farobiy students\Desktop\zafar projectsa\main projects\botmaker"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="windows-1252"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\Farobiy students\AppData\Local\Temp\surefire3797674062156227365\surefirebooter-20250413142750307_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.14+7-LTS"/>
    <property name="user.name" value="Farobiy students"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-17.0.14.7.1"/>
    <property name="localRepository" value="C:\Users\Farobiy students\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-17/issues/"/>
    <property name="java.io.tmpdir" value="C:\Users\FAROBI~1\AppData\Local\Temp\"/>
    <property name="idea.version" value="2024.3.5"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.14"/>
    <property name="user.dir" value="C:\Users\Farobiy students\Desktop\zafar projectsa\main projects\botmaker"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="15136"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\Farobiy students\.jdks\corretto-17.0.14\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Eclipse Adoptium\jdk-21.0.6.7-hotspot\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\dotnet\;C:\Users\Farobiy students\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\Farobiy students\AppData\Local\Programs\Python\Python313\;C:\Users\Farobiy students\AppData\Local\Programs\Python\Launcher\;C:\Users\Farobiy students\AppData\Local\Microsoft\WindowsApps;C:\Users\Farobiy students\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Farobiy students\AppData\Roaming\npm;C:\Users\Farobiy students\AppData\Local\JetBrains\IntelliJ IDEA 2024.3.5\bin;;C:\Users\Farobiy students\AppData\Local\Programs\Git\cmd;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="17.0.14+7-LTS"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[example-bot] "/>
  </properties>
  <testcase name="contextLoads" classname="org.example.newbot.NewbotApplicationTests" time="0.381">
    <system-out><![CDATA[Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
14:27:51.177 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [org.example.newbot.NewbotApplicationTests]: NewbotApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:27:51.297 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration org.example.newbot.NewbotApplication for test class org.example.newbot.NewbotApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-04-13T14:27:51.737+05:00  INFO 15136 --- [example-bot] [           main] o.example.newbot.NewbotApplicationTests  : Starting NewbotApplicationTests using Java 17.0.14 with PID 15136 (started by Farobiy students in C:\Users\Farobiy students\Desktop\zafar projectsa\main projects\botmaker)
2025-04-13T14:27:51.737+05:00  INFO 15136 --- [example-bot] [           main] o.example.newbot.NewbotApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2025-04-13T14:27:52.907+05:00  INFO 15136 --- [example-bot] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-13T14:27:52.977+05:00  INFO 15136 --- [example-bot] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 56 ms. Found 16 JPA repository interfaces.
2025-04-13T14:27:53.617+05:00  INFO 15136 --- [example-bot] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-04-13T14:27:54.167+05:00  INFO 15136 --- [example-bot] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@21390938
2025-04-13T14:27:54.167+05:00  INFO 15136 --- [example-bot] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-04-13T14:27:54.287+05:00  INFO 15136 --- [example-bot] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-13T14:27:54.367+05:00  INFO 15136 --- [example-bot] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.11.Final
2025-04-13T14:27:54.417+05:00  INFO 15136 --- [example-bot] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-04-13T14:27:54.739+05:00  INFO 15136 --- [example-bot] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-13T14:27:54.845+05:00  INFO 15136 --- [example-bot] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-13T14:27:55.847+05:00  INFO 15136 --- [example-bot] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-13T14:27:56.067+05:00  INFO 15136 --- [example-bot] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-13T14:27:56.417+05:00  INFO 15136 --- [example-bot] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: select bp1_0.id,bp1_0.active,bp1_0.description,bp1_0.price,bp1_0.status,bp1_0.typee,bp1_0.type_text from bot_price bp1_0 where bp1_0.id=?
Hibernate: update bot_price set active=?,description=?,price=?,status=?,typee=?,type_text=? where id=?
Hibernate: insert into bot_price (active,description,price,status,typee,type_text) values (?,?,?,?,?,?)
Hibernate: insert into bot_price (active,description,price,status,typee,type_text) values (?,?,?,?,?,?)
Hibernate: select p1_0.id,p1_0.img,p1_0.number,p1_0.owner,p1_0.naslkanls from payment p1_0
2025-04-13T14:27:58.620+05:00  WARN 15136 --- [example-bot] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-13T14:27:58.658+05:00  INFO 15136 --- [example-bot] [           main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-04-13T14:27:59.673+05:00  INFO 15136 --- [example-bot] [           main] o.example.newbot.NewbotApplicationTests  : Started NewbotApplicationTests in 8.216 seconds (process running for 9.236)
Hibernate: select bi1_0.id,bi1_0.active,bi1_0.bot_token,bi1_0.bot_username,bi1_0.created_at,bi1_0.is_free,bi1_0.type1e,bi1_0.updated_at from bot_inf1o bi1_0 where bi1_0.active order by bi1_0.id desc
Hibernate: select u1_0.bot_id,u1_1.id,u1_1.address,u1_1.bot_user_id,u1_1.branch_id,u1_1.cart_id,u1_1.category_id,u1_1.chatid1,u1_1.chat_id_help,u1_1.count,u1_1.course_id,u1_1.delivery_type,u1_1.event_code,u1_1.firstname,u1_1.helper_phone,u1_1.helper_value,u1_1.lang,u1_1.lastname,u1_1.latitude,u1_1.lesson_id,u1_1.longitude,u1_1.nickname,u1_1.page,u1_1.payment_type_ru,u1_1.payment_type_uz,u1_1.phone,u1_1.product_id,u1_1.product_variant_id,u1_1.role,u1_1.username,u1_1.video_id from bot_user u1_0 join bot_users u1_1 on u1_1.id=u1_0.user_id where u1_0.bot_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
Hibernate: select aci1_0.bot_info_id,aci1_0.admin_chat_ids from bot_info_admin_chat_ids aci1_0 where aci1_0.bot_info_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
Hibernate: select u1_0.bot_id,u1_1.id,u1_1.address,u1_1.bot_user_id,u1_1.branch_id,u1_1.cart_id,u1_1.category_id,u1_1.chatid1,u1_1.chat_id_help,u1_1.count,u1_1.course_id,u1_1.delivery_type,u1_1.event_code,u1_1.firstname,u1_1.helper_phone,u1_1.helper_value,u1_1.lang,u1_1.lastname,u1_1.latitude,u1_1.lesson_id,u1_1.longitude,u1_1.nickname,u1_1.page,u1_1.payment_type_ru,u1_1.payment_type_uz,u1_1.phone,u1_1.product_id,u1_1.product_variant_id,u1_1.role,u1_1.username,u1_1.video_id from bot_user u1_0 join bot_users u1_1 on u1_1.id=u1_0.user_id where u1_0.bot_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
Hibernate: select aci1_0.bot_info_id,aci1_0.admin_chat_ids from bot_info_admin_chat_ids aci1_0 where aci1_0.bot_info_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
2025-04-13T14:28:00.151+05:00  INFO 15136 --- [example-bot] [           main] o.e.newbot.service.DynamicBotService     : Yangi username olingan: isdfab0oybot
Hibernate: select bi1_0.id,bi1_0.active,bi1_0.bot_token,bi1_0.bot_username,bi1_0.created_at,bi1_0.is_free,bi1_0.type1e,bi1_0.updated_at,aci1_0.bot_info_id,aci1_0.admin_chat_ids from bot_inf1o bi1_0 left join bot_info_admin_chat_ids aci1_0 on bi1_0.id=aci1_0.bot_info_id where bi1_0.id=?
Hibernate: select u1_0.bot_id,u1_1.id,u1_1.address,u1_1.bot_user_id,u1_1.branch_id,u1_1.cart_id,u1_1.category_id,u1_1.chatid1,u1_1.chat_id_help,u1_1.count,u1_1.course_id,u1_1.delivery_type,u1_1.event_code,u1_1.firstname,u1_1.helper_phone,u1_1.helper_value,u1_1.lang,u1_1.lastname,u1_1.latitude,u1_1.lesson_id,u1_1.longitude,u1_1.nickname,u1_1.page,u1_1.payment_type_ru,u1_1.payment_type_uz,u1_1.phone,u1_1.product_id,u1_1.product_variant_id,u1_1.role,u1_1.username,u1_1.video_id from bot_user u1_0 join bot_users u1_1 on u1_1.id=u1_0.user_id where u1_0.bot_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
2025-04-13T14:28:00.375+05:00  INFO 15136 --- [example-bot] [           main] o.e.newbot.service.DynamicBotService     : Yangi username olingan: isdfab0oybot
Hibernate: select bi1_0.id,bi1_0.active,bi1_0.bot_token,bi1_0.bot_username,bi1_0.created_at,bi1_0.is_free,bi1_0.type1e,bi1_0.updated_at,aci1_0.bot_info_id,aci1_0.admin_chat_ids from bot_inf1o bi1_0 left join bot_info_admin_chat_ids aci1_0 on bi1_0.id=aci1_0.bot_info_id where bi1_0.id=?
Hibernate: select u1_0.bot_id,u1_1.id,u1_1.address,u1_1.bot_user_id,u1_1.branch_id,u1_1.cart_id,u1_1.category_id,u1_1.chatid1,u1_1.chat_id_help,u1_1.count,u1_1.course_id,u1_1.delivery_type,u1_1.event_code,u1_1.firstname,u1_1.helper_phone,u1_1.helper_value,u1_1.lang,u1_1.lastname,u1_1.latitude,u1_1.lesson_id,u1_1.longitude,u1_1.nickname,u1_1.page,u1_1.payment_type_ru,u1_1.payment_type_uz,u1_1.phone,u1_1.product_id,u1_1.product_variant_id,u1_1.role,u1_1.username,u1_1.video_id from bot_user u1_0 join bot_users u1_1 on u1_1.id=u1_0.user_id where u1_0.bot_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
2025-04-13T14:28:00.483+05:00  INFO 15136 --- [example-bot] [           main] o.e.newbot.service.DynamicBotService     : Yangi username olingan: isdfab0oybot
Hibernate: select bi1_0.id,bi1_0.active,bi1_0.bot_token,bi1_0.bot_username,bi1_0.created_at,bi1_0.is_free,bi1_0.type1e,bi1_0.updated_at,aci1_0.bot_info_id,aci1_0.admin_chat_ids from bot_inf1o bi1_0 left join bot_info_admin_chat_ids aci1_0 on bi1_0.id=aci1_0.bot_info_id where bi1_0.id=?
Hibernate: select u1_0.bot_id,u1_1.id,u1_1.address,u1_1.bot_user_id,u1_1.branch_id,u1_1.cart_id,u1_1.category_id,u1_1.chatid1,u1_1.chat_id_help,u1_1.count,u1_1.course_id,u1_1.delivery_type,u1_1.event_code,u1_1.firstname,u1_1.helper_phone,u1_1.helper_value,u1_1.lang,u1_1.lastname,u1_1.latitude,u1_1.lesson_id,u1_1.longitude,u1_1.nickname,u1_1.page,u1_1.payment_type_ru,u1_1.payment_type_uz,u1_1.phone,u1_1.product_id,u1_1.product_variant_id,u1_1.role,u1_1.username,u1_1.video_id from bot_user u1_0 join bot_users u1_1 on u1_1.id=u1_0.user_id where u1_0.bot_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
2025-04-13T14:28:00.487+05:00  INFO 15136 --- [example-bot] [           main] o.e.newbot.service.DynamicBotService     : Bot qo'shildi: 2 (@isdfab0oybot)
2025-04-13T14:28:00.487+05:00  INFO 15136 --- [example-bot] [           main] o.e.newbot.config.DynamicBotConfig       : Bot yuklandi: isdfab0oybot
2025-04-13T14:28:00.884+05:00  INFO 15136 --- [example-bot] [           main] o.e.newbot.service.DynamicBotService     : Yangi username olingan: botbotbtobtowbsrbortsbot
Hibernate: select bi1_0.id,bi1_0.active,bi1_0.bot_token,bi1_0.bot_username,bi1_0.created_at,bi1_0.is_free,bi1_0.type1e,bi1_0.updated_at,aci1_0.bot_info_id,aci1_0.admin_chat_ids from bot_inf1o bi1_0 left join bot_info_admin_chat_ids aci1_0 on bi1_0.id=aci1_0.bot_info_id where bi1_0.id=?
Hibernate: select u1_0.bot_id,u1_1.id,u1_1.address,u1_1.bot_user_id,u1_1.branch_id,u1_1.cart_id,u1_1.category_id,u1_1.chatid1,u1_1.chat_id_help,u1_1.count,u1_1.course_id,u1_1.delivery_type,u1_1.event_code,u1_1.firstname,u1_1.helper_phone,u1_1.helper_value,u1_1.lang,u1_1.lastname,u1_1.latitude,u1_1.lesson_id,u1_1.longitude,u1_1.nickname,u1_1.page,u1_1.payment_type_ru,u1_1.payment_type_uz,u1_1.phone,u1_1.product_id,u1_1.product_variant_id,u1_1.role,u1_1.username,u1_1.video_id from bot_user u1_0 join bot_users u1_1 on u1_1.id=u1_0.user_id where u1_0.bot_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
2025-04-13T14:28:01.088+05:00  INFO 15136 --- [example-bot] [           main] o.e.newbot.service.DynamicBotService     : Yangi username olingan: botbotbtobtowbsrbortsbot
Hibernate: select bi1_0.id,bi1_0.active,bi1_0.bot_token,bi1_0.bot_username,bi1_0.created_at,bi1_0.is_free,bi1_0.type1e,bi1_0.updated_at,aci1_0.bot_info_id,aci1_0.admin_chat_ids from bot_inf1o bi1_0 left join bot_info_admin_chat_ids aci1_0 on bi1_0.id=aci1_0.bot_info_id where bi1_0.id=?
Hibernate: select u1_0.bot_id,u1_1.id,u1_1.address,u1_1.bot_user_id,u1_1.branch_id,u1_1.cart_id,u1_1.category_id,u1_1.chatid1,u1_1.chat_id_help,u1_1.count,u1_1.course_id,u1_1.delivery_type,u1_1.event_code,u1_1.firstname,u1_1.helper_phone,u1_1.helper_value,u1_1.lang,u1_1.lastname,u1_1.latitude,u1_1.lesson_id,u1_1.longitude,u1_1.nickname,u1_1.page,u1_1.payment_type_ru,u1_1.payment_type_uz,u1_1.phone,u1_1.product_id,u1_1.product_variant_id,u1_1.role,u1_1.username,u1_1.video_id from bot_user u1_0 join bot_users u1_1 on u1_1.id=u1_0.user_id where u1_0.bot_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
2025-04-13T14:28:01.192+05:00  INFO 15136 --- [example-bot] [           main] o.e.newbot.service.DynamicBotService     : Yangi username olingan: botbotbtobtowbsrbortsbot
Hibernate: select bi1_0.id,bi1_0.active,bi1_0.bot_token,bi1_0.bot_username,bi1_0.created_at,bi1_0.is_free,bi1_0.type1e,bi1_0.updated_at,aci1_0.bot_info_id,aci1_0.admin_chat_ids from bot_inf1o bi1_0 left join bot_info_admin_chat_ids aci1_0 on bi1_0.id=aci1_0.bot_info_id where bi1_0.id=?
Hibernate: select u1_0.bot_id,u1_1.id,u1_1.address,u1_1.bot_user_id,u1_1.branch_id,u1_1.cart_id,u1_1.category_id,u1_1.chatid1,u1_1.chat_id_help,u1_1.count,u1_1.course_id,u1_1.delivery_type,u1_1.event_code,u1_1.firstname,u1_1.helper_phone,u1_1.helper_value,u1_1.lang,u1_1.lastname,u1_1.latitude,u1_1.lesson_id,u1_1.longitude,u1_1.nickname,u1_1.page,u1_1.payment_type_ru,u1_1.payment_type_uz,u1_1.phone,u1_1.product_id,u1_1.product_variant_id,u1_1.role,u1_1.username,u1_1.video_id from bot_user u1_0 join bot_users u1_1 on u1_1.id=u1_0.user_id where u1_0.bot_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
Hibernate: select b1_0.user_id,b1_1.id,b1_1.active,b1_1.bot_token,b1_1.bot_username,b1_1.created_at,b1_1.is_free,b1_1.type1e,b1_1.updated_at from bot_user b1_0 join bot_inf1o b1_1 on b1_1.id=b1_0.bot_id where b1_0.user_id=?
2025-04-13T14:28:01.196+05:00  INFO 15136 --- [example-bot] [           main] o.e.newbot.service.DynamicBotService     : Bot qo'shildi: 1 (@botbotbtobtowbsrbortsbot)
2025-04-13T14:28:01.196+05:00  INFO 15136 --- [example-bot] [           main] o.e.newbot.config.DynamicBotConfig       : Bot yuklandi: botbotbtobtowbsrbortsbot
]]></system-out>
  </testcase>
</testsuite>